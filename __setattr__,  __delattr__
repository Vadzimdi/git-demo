class Shop:
    def __init__(self, name, ):
        self.name = name
        self.goods = []

    def add_product(self, product):
        self.goods.append(product)

    def remove_product(self, product):
        self.goods.remove(product)


class Product:
    a = 1
    dict1 = {'name': (str,), 'weight': (int, float), 'price': (int, float)}

    def __init__(self, name, weight, price):
        self.name = name
        self.weight = weight
        self.price = price
        self.id = Product.a
        Product.a += 1

    def __setattr__(self, key, value):
        if key in self.dict1 and type(value) not in self.dict1[key]:
            raise TypeError("Неверный тип присваиваемых данных.")
        elif key in 'name':
            object.__setattr__(self, key, value)
        elif key in 'weight' and value <= 0:
            raise TypeError("Неверный тип присваиваемых данных.")
        elif key in 'price' and value <= 0:
            raise TypeError("Неверный тип присваиваемых данных.")

        object.__setattr__(self, key, value)

    def __delattr__(self, item):
        if item == 'id':
            raise AttributeError("Атрибут id удалять запрещено.")
        object.__delattr__(self, item)

shop = Shop("Балакирев и К")
book = Product("Python ООП", 100, 1024)
shop.add_product(book)
shop.add_product(Product("Python", 150, 512))
for p in shop.goods:
    print(f"{p.name}, {p.weight}, {p.price}")
